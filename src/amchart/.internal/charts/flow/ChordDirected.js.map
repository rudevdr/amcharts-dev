{"version":3,"file":"ChordDirected.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/flow/ChordDirected.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAA+D,MAAM,SAAS,CAAC;AAC7F,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,EAAgD,MAAM,UAAU,CAAC;AAC5G,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAEpD,OAAO,KAAK,MAAM,MAAM,uBAAuB,CAAC;AAyBhD;;;;;GAKG;AACH,MAAM,OAAO,aAAc,SAAQ,KAAK;IAAxC;;QAUC;;;;mBAAkB,aAAa,EAAE;WAAC;QAClC;;;;mBAAyE,WAAW,EAAE;WAAC;QAEvF;;;;WAIG;QACH;;;;mBAAyD,IAAI,YAAY,CACxE,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAChB,GAAG,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CACjG;WAAC;IAqCH,CAAC;IApCA;;OAEG;IACI,QAAQ,CAAC,QAA6C;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,OAAO,IAAI,CAAC;IACb,CAAC;IAES,SAAS;QAClB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;QACpF,KAAK,CAAC,SAAS,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAEM,gBAAgB;QACtB,MAAM,cAAc,GAAG,gBAAgB,CAAC;QACxC,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5C,IAAI,UAAU,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC;aACxB;iBACI;gBACJ,IAAI,MAAM,GAAG,WAAW,EAAE,CAAC;gBAC3B,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACtB;SACD;QAED,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;;AAvDD;;;;WAAkC,eAAe;GAAC;AAClD;;;;WAA0C,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\nimport { chordDirected, ribbonArrow, ribbon, RibbonArrowGenerator, Ribbon, RibbonSubgroup } from \"d3-chord\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordDirectedDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordDirectedSettings extends IChordSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * Set to `null` to disable arrowheads.\n\t *\n\t * @default 10\n\t */\n\tlinkHeadRadius?: number | undefined;\n\n}\n\nexport interface IChordDirectedPrivate extends IChordPrivate {\n}\n\nexport interface IChordDirectedEvents extends IChordEvents {\n}\n\n/**\n * Directed chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordDirected extends Chord {\n\n\tpublic static className: string = \"ChordDirected\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordDirected.className]);\n\n\tdeclare public _settings: IChordDirectedSettings;\n\tdeclare public _privateSettings: IChordDirectedPrivate;\n\tdeclare public _dataItemSettings: IChordDirectedDataItem;\n\tdeclare public _events: IChordDirectedEvents;\n\n\tpublic _d3chord = chordDirected();\n\tpublic _ribbonArrow: RibbonArrowGenerator<any, Ribbon, RibbonSubgroup> = ribbonArrow();\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLinkDirected>\n\t */\n\tpublic readonly links: ListTemplate<ChordLinkDirected> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLinkDirected {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\n\t\tlink.series = this;\n\n\t\treturn link;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\n\t\tsuper._afterNew();\n\t\tthis._markDirtyKey(\"linkHeadRadius\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst linkHeadRadius = \"linkHeadRadius\";\n\t\tif (this.isDirty(linkHeadRadius)) {\n\t\t\tconst headRadius = this.get(linkHeadRadius);\n\t\t\tif (headRadius == null) {\n\t\t\t\tthis._ribbon = ribbon();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ribbon = ribbonArrow();\n\t\t\t\tribbon.headRadius(headRadius);\n\t\t\t\tthis._ribbon = ribbon;\n\t\t\t}\n\t\t}\n\n\t\tsuper._prepareChildren();\n\t}\n}\n"]}