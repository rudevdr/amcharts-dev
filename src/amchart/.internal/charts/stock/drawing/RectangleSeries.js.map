{"version":3,"file":"RectangleSeries.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/drawing/RectangleSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IRectangleSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n\r\n}\r\n\r\nexport interface IRectangleSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n}\r\n\r\nexport interface IRectangleSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class RectangleSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"RectangleSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([RectangleSeries.className]);\r\n\r\n\tdeclare public _settings: IRectangleSeriesSettings;\r\n\tdeclare public _privateSettings: IRectangleSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IRectangleSeriesDataItem;\r\n\r\n\tprotected _index: number = 0;\r\n\r\n\tprotected _di: Array<{ [index: string]: DataItem<IRectangleSeriesDataItem> }> = []\r\n\r\n\tprotected _tag = \"rectangle\";\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\r\n\t\tif (series && diP1 && diP2) {\r\n\t\t\tlet x1 = this._getXValue(diP1.get(\"valueX\" as any));\r\n\t\t\tlet x2 = this._getXValue(diP2.get(\"valueX\" as any));\r\n\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tlet y1 = this._getYValue(diP1.get(field as any), x1);\r\n\t\t\tlet y2 = this._getYValue(diP2.get(field as any), x2);\r\n\r\n\t\t\tthis._setContext(diP1, \"valueY\", y1, true);\r\n\t\t\tthis._setContext(diP2, \"valueY\", y2, true);\r\n\r\n\t\t\tthis._positionBullets(diP1);\r\n\t\t\tthis._positionBullets(diP2);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setXLocation(dataItem: DataItem<this[\"_dataItemSettings\"]>, value: number) {\r\n\t\tif (!this.get(\"snapToData\")) {\r\n\t\t\tthis._setXLocationReal(dataItem, value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.set(\"locationX\", 0);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tconst chart = this.chart;\r\n\t\tthis.fills.clear();\r\n\t\tif (chart) {\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\t\t\t\t\tconst di = this._di[i][\"e\"];\r\n\r\n\t\t\t\t\tconst dataContext = di.dataContext as any;\r\n\t\t\t\t\tconst fillGraphics = this.makeFill(this.fills);\r\n\r\n\t\t\t\t\tconst index = this.dataItems.indexOf(diP1);\r\n\t\t\t\t\tfor (let j = index; j >= 0; j--) {\r\n\t\t\t\t\t\tconst dataContext = this.dataItems[j].dataContext as any;\r\n\t\t\t\t\t\tconst template = dataContext.fill;\r\n\t\t\t\t\t\tif (template) {\r\n\t\t\t\t\t\t\tfillGraphics.template = template;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst userData = [this.dataItems.indexOf(diP1), this.dataItems.indexOf(diP2)];\r\n\r\n\t\t\t\t\tlet fillColor = this.get(\"fillColor\", this.get(\"fill\"));\r\n\r\n\t\t\t\t\tconst fillTemplate = dataContext.fill;\r\n\r\n\t\t\t\t\tif (fillTemplate) {\r\n\t\t\t\t\t\tfillColor = fillTemplate.get(\"fill\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst settings = { userData: userData, fill: fillColor };\r\n\t\t\t\t\tfillGraphics.setAll(settings);\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\tfillGraphics.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tconst strokeGraphics = this.strokes.getIndex(this._getStrokeIndex(i));\r\n\r\n\t\t\t\t\t\tif (strokeGraphics) {\r\n\t\t\t\t\t\t\tstrokeGraphics.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p1.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p2.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._updateOthers(i, fillGraphics, p1, p2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateOthers(_index: number, _fillGraphics: Graphics, _p1: IPoint, _p2: IPoint) {\r\n\r\n\t}\r\n\r\n\tprotected _drawFill() {\r\n\r\n\t}\r\n\r\n\tprotected _updateLine() {\r\n\r\n\t}\r\n}"]}