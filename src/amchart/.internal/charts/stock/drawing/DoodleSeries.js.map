{"version":3,"file":"DoodleSeries.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/drawing/DoodleSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\n\r\nexport interface IDoodleSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface IDoodleSeriesSettings extends IDrawingSeriesSettings {\r\n\r\n}\r\n\r\nexport interface IDoodleSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\nexport class DoodleSeries extends DrawingSeries {\r\n\tpublic static className: string = \"DoodleSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([DoodleSeries.className]);\r\n\r\n\tdeclare public _settings: IDoodleSeriesSettings;\r\n\tdeclare public _privateSettings: IDoodleSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IDoodleSeriesDataItem;\r\n\r\n\tprotected _panX?: boolean;\r\n\tprotected _panY?: boolean;\r\n\r\n\t// point index in segment\r\n\tprotected _pIndex: number = 0;\r\n\r\n\tprotected _tag = \"doodle\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\t\tthis.bullets.clear();\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\r\n\t\tif (this._drawingEnabled && this._isPointerDown) {\r\n\t\t\tthis._handleBulletPosition(event);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletPosition(event: ISpritePointerEvent) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(point.x)));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueX);\r\n\r\n\t\t\tconst index = this._index;\r\n\t\t\tthis.data.push({ valueY: valueY, valueX: valueX, index:index, corner:this._pIndex });\r\n\t\t\tconst len = this.dataItems.length;\r\n\r\n\t\t\tconst dataItem = this.dataItems[len - 1];\t\t\t\r\n\t\t\tthis._setXLocation(dataItem, valueX);\r\n\r\n\t\t\tlet segmentItems = this._di[index];\r\n\t\t\tif (!segmentItems) {\r\n\t\t\t\tsegmentItems = {};\r\n\t\t\t}\r\n\t\t\tsegmentItems[this._pIndex] = dataItem;\r\n\t\t\tthis._di[index] = segmentItems;\r\n\t\t\tthis._pIndex++;\r\n\r\n\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleFillDragStart(e: ISpritePointerEvent, index: number) {\r\n\t\tif (!this._drawingEnabled) {\r\n\t\t\tsuper._handleFillDragStart(e, index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerDown(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerDown(event);\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._index++;\r\n\t\t\tthis._pIndex = 0;\r\n\r\n\t\t\tthis._panX = chart.get(\"panX\");\r\n\t\t\tthis._panY = chart.get(\"panY\");\r\n\r\n\t\t\tchart.set(\"panX\", false);\r\n\t\t\tchart.set(\"panY\", false);\r\n\r\n\t\t\tconst cursor = chart.get(\"cursor\");\r\n\t\t\tif (cursor) {\r\n\t\t\t\tcursor.setPrivate(\"visible\", false);\r\n\t\t\t}\r\n\r\n\t\t\tthis.data.push({ stroke: this._getStrokeTemplate(), index:this._index, corner:this._pIndex });\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerUp(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerUp(event);\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis.setTimeout(() => {\r\n\t\t\t\tchart.set(\"panX\", this._panX);\r\n\t\t\t\tchart.set(\"panY\", this._panY);\r\n\t\t\t\tconst cursor = chart.get(\"cursor\");\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tcursor.setPrivate(\"visible\", true);\r\n\t\t\t\t}\r\n\t\t\t}, 100)\r\n\t\t}\r\n\t}\r\n}"]}