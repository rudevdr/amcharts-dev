{"version":3,"file":"FibonacciSeries.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/drawing/FibonacciSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\nimport { Label } from \"../../../core/render/Label\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IFibonacciSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n\r\n}\r\n\r\nexport interface IFibonacciSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Sequence.\r\n\t */\r\n\tsequence?: Array<number>;\r\n\r\n\t/**\r\n\t * Array of colors to use for bands.\r\n\t */\r\n\tcolors?: Array<Color>\r\n\r\n}\r\n\r\nexport interface IFibonacciSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class FibonacciSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"FibonacciSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([FibonacciSeries.className]);\r\n\r\n\tdeclare public _settings: IFibonacciSeriesSettings;\r\n\tdeclare public _privateSettings: IFibonacciSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IFibonacciSeriesDataItem;\r\n\r\n\tprotected _tag = \"fibonacci\";\r\n\tprotected _labels: Array<Array<Label>> = [];\r\n\tprotected _fills: Array<Array<Graphics>> = [];\r\n\tprotected _strokes: Array<Array<Graphics>> = [];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLabel(): Label {\r\n\t\tconst label = this.labels.make();\r\n\t\tthis.bulletsContainer.children.push(label);\r\n\t\tthis.labels.push(label);\r\n\t\treturn label;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of labels.\r\n\t *\r\n\t * `labels.template` can be used to configure axis labels.\r\n\t *\r\n\t * @default new ListTemplate<Label>\r\n\t */\r\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Label._new(this._root, {}, [this.labels.template])\r\n\t);\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tthis._updateChildrenReal();\r\n\t}\r\n\r\n\tprotected _updateChildrenReal() {\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\tconst sequence = this.get(\"sequence\", []);\r\n\t\t\t\t\t\tlet prevValue = 0;\r\n\r\n\t\t\t\t\t\tconst labels = this._labels[i];\r\n\t\t\t\t\t\tconst strokes = this._strokes[i];\r\n\t\t\t\t\t\tconst fills = this._fills[i];\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < sequence.length; i++) {\r\n\t\t\t\t\t\t\tconst value = sequence[i] - 1;\r\n\r\n\t\t\t\t\t\t\tconst label = labels[i];\r\n\r\n\t\t\t\t\t\t\tconst fill = fills[i];\r\n\t\t\t\t\t\t\tconst stroke = strokes[i];\r\n\r\n\t\t\t\t\t\t\tlet fillColor = this.get(\"colors\", [])[i];\r\n\t\t\t\t\t\t\tlet strokeColor = fillColor;\r\n\r\n\t\t\t\t\t\t\tfill.set(\"fill\", fillColor);\r\n\t\t\t\t\t\t\tfill.set(\"fillOpacity\", this.get(\"fillOpacity\", 0));\r\n\t\t\t\t\t\t\tstroke.set(\"stroke\", strokeColor);\r\n\t\t\t\t\t\t\tstroke.set(\"strokeOpacity\", this.get(\"strokeOpacity\", 0));\r\n\r\n\t\t\t\t\t\t\tconst y1 = p1.y + (p2.y - p1.y) * prevValue;\r\n\t\t\t\t\t\t\tconst y2 = p1.y + (p2.y - p1.y) * -value;\r\n\r\n\t\t\t\t\t\t\tconst realValue = yAxis.positionToValue(yAxis.coordinateToPosition(y2));\r\n\r\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\t\t\t\tfill.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, y1);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, y1);\r\n\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, y2);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, y2);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, y1);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tstroke.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, y2);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, y2);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tconst dataItem = label.dataItem;\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\tdataItem.set(\"value\" as any, realValue);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlabel.setAll({ x: p2.x, y: y2, fill: fillColor });\r\n\t\t\t\t\t\t\tlabel.text.markDirtyText();\r\n\r\n\t\t\t\t\t\t\tprevValue = -value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createElements(index: number) {\r\n\t\tsuper._createElements(index);\r\n\r\n\t\tif (!this._fills[index]) {\r\n\r\n\t\t\tconst labelArr = [];\r\n\t\t\tconst fillsArr = [];\r\n\t\t\tconst strokesArr = [];\r\n\r\n\t\t\tconst sequence = this.get(\"sequence\", []);\r\n\r\n\t\t\tfor (let i = 0; i < sequence.length; i++) {\r\n\t\t\t\tconst label = this.makeLabel();\r\n\t\t\t\tconst dataItem = this.makeDataItem({});\r\n\t\t\t\tdataItem.set(\"sequence\" as any, sequence[i]);\r\n\t\t\t\tlabel._setDataItem(dataItem);\r\n\t\t\t\tlabelArr.push(label);\r\n\r\n\t\t\t\tconst fill = this.makeFill(this.fills);\r\n\t\t\t\tfillsArr.push(fill);\r\n\r\n\t\t\t\tconst stroke = this.makeStroke(this.strokes);\r\n\t\t\t\tstrokesArr.push(stroke);\r\n\t\t\t}\r\n\r\n\t\t\tthis._labels[index] = labelArr;\r\n\t\t\tthis._fills[index] = fillsArr;\r\n\t\t\tthis._strokes[index] = strokesArr;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _drawFill() {\r\n\r\n\t}\r\n\r\n\tprotected _drawStroke() {\r\n\r\n\t}\r\n\r\n\tprotected _updateLine() {\r\n\r\n\t}\r\n\r\n\tprotected _clearGraphics() {\r\n\r\n\t}\r\n\r\n\tpublic enableDrawing() {\r\n\t\tsuper.enableDrawing();\r\n\t\tthis.showAllBullets();\r\n\t}\r\n\r\n\tpublic enableErasing() {\r\n\t\tsuper.enableErasing();\r\n\t\tthis.showAllBullets();\r\n\t}\r\n\r\n\tprotected _hideAllBullets() {\r\n\t\tif (this._drawingEnabled || this._erasingEnabled) {\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper._hideAllBullets();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst labels = this._labels[index];\r\n\t\t\tconst fills = this._fills[index];\r\n\t\t\tconst strokes = this._strokes[index];\r\n\r\n\t\t\tif (labels) {\r\n\t\t\t\t$array.each(labels, (item) => {\r\n\t\t\t\t\titem.dispose();\r\n\t\t\t\t\tthis.labels.removeValue(item);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tdelete (this._labels[index]);\r\n\t\t\t}\r\n\t\t\tif (fills) {\r\n\t\t\t\t$array.each(fills, (item) => {\r\n\t\t\t\t\tthis.fills.removeValue(item);\r\n\t\t\t\t\titem.dispose();\r\n\t\t\t\t})\r\n\t\t\t\tdelete (this._fills[index]);\r\n\t\t\t}\r\n\t\t\tif (strokes) {\r\n\t\t\t\t$array.each(strokes, (item) => {\r\n\t\t\t\t\tthis.strokes.removeValue(item);\r\n\t\t\t\t\titem.dispose();\r\n\t\t\t\t})\r\n\t\t\t\tdelete (this._strokes[index]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"]}