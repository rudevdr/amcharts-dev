{"version":3,"file":"AverageSeries.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/drawing/AverageSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IAverageSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IAverageSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IAverageSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n\r\n}\r\n\r\nexport class AverageSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"AverageSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([AverageSeries.className]);\r\n\r\n\tdeclare public _settings: IAverageSeriesSettings;\r\n\tdeclare public _privateSettings: IAverageSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IAverageSeriesDataItem;\r\n\r\n\tprotected _tag = \"average\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\t\tthis.set(\"snapToData\", true);\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst dataPoints = this._di[index];\r\n\t\tif (dataPoints) {\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\tconst series = this.get(\"series\");\r\n\t\t\tif (series && diP1 && diP2) {\r\n\r\n\t\t\t\tlet x1 = this._getXValue(diP1.get(\"valueX\" as any));\r\n\t\t\t\tlet x2 = this._getXValue(diP2.get(\"valueX\" as any));\r\n\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\tconst di1 = xAxis.getSeriesItem(series, Math.max(0, xAxis.valueToPosition(x1)));\r\n\t\t\t\tconst di2 = xAxis.getSeriesItem(series, Math.min(1, xAxis.valueToPosition(x2)));\r\n\r\n\t\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\t\tif (di1 && di2) {\r\n\t\t\t\t\tlet i1 = series.dataItems.indexOf(di1);\r\n\t\t\t\t\tlet i2 = series.dataItems.indexOf(di2);\r\n\r\n\t\t\t\t\tif (i1 > i2) {\r\n\t\t\t\t\t\t[i1, i2] = [i2, i1];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet sum = 0;\r\n\t\t\t\t\tlet count = 0;\r\n\r\n\t\t\t\t\tfor (let i = i1; i <= i2; i++) {\r\n\t\t\t\t\t\tconst di = series.dataItems[i];\r\n\t\t\t\t\t\tconst value = di.get(field as any);\r\n\t\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\t\tsum += value;\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst average = sum / count;\r\n\r\n\t\t\t\t\tdiP1.set(\"valueX\", x1);\r\n\t\t\t\t\tdiP2.set(\"valueX\", x2);\r\n\r\n\t\t\t\t\tthis._setContext(diP1, \"valueX\", x1);\r\n\t\t\t\t\tthis._setContext(diP2, \"valueX\", x2);\r\n\t\t\t\t\tthis._setContext(diP1, \"valueY\", average, true);\r\n\t\t\t\t\tthis._setContext(diP2, \"valueY\", average, true);\r\n\r\n\t\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateElements();\r\n\t\t}\r\n\t}\r\n}"]}