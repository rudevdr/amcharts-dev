{"version":3,"file":"DrawingToolControl.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/toolbar/DrawingToolControl.ts"],"names":[],"mappings":"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","sourcesContent":["import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport type DrawingTools = \"Arrows &amp; Icons\" | \"Average\" | \"Callout\" | \"Doodle\" | \"Ellipse\" | \"Fibonacci\" | \"Fibonacci Timezone\" | \"Horizontal Line\" | \"Horizontal Ray\" |  \"Label\" | \"Line\" | \"Measure\" | \"Parallel Channel\" | \"Polyline\" | \"Quadrant Line\" | \"Rectangle\" | \"Regression\" | \"Trend Line\" | \"Vertical Line\";\r\n\r\nexport interface IDrawingToolControlSettings extends IStockControlSettings {\r\n\ttools: DrawingTools[];\r\n}\r\n\r\nexport interface IDrawingToolControlPrivate extends IStockControlPrivate {\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IDrawingToolControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\ttool: DrawingTools\r\n\t}\r\n}\r\n\r\n/**\r\n * Control which allows selecting drawing tool.\r\n *\r\n * Should not be instantiated directly. Use [[DrawingControl]] instead.\r\n */\r\nexport class DrawingToolControl extends StockControl {\r\n\tpublic static className: string = \"DrawingToolControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DrawingToolControl.className]);\r\n\r\n\tdeclare public _settings: IDrawingToolControlSettings;\r\n\tdeclare public _privateSettings: IDrawingToolControlPrivate;\r\n\tdeclare public _events: IDrawingToolControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = DropdownList.new(this._root, {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\")\r\n\t\t});\r\n\t\tthis.setPrivate(\"list\", list);\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tthis.setTool(<DrawingTools>ev.item.label);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\ttool: <DrawingTools>ev.item.id,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\r\n\t\tthis._initTools();\r\n\t}\r\n\r\n\tpublic setTool(tool: DrawingTools): void {\r\n\t\tthis.getPrivate(\"icon\")!.innerHTML = \"\";\r\n\t\tthis.getPrivate(\"icon\")!.appendChild(this._getToolIcon(tool));\r\n\t\t//this.getPrivate(\"label\")!.innerHTML = tool;\r\n\t\tthis._setLabel(this._root.language.translateAny(tool));\r\n\t}\r\n\r\n\tprotected _initTools(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst tools = this.get(\"tools\");\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(tools, (tool: DrawingTools) => {\r\n\t\t\titems.push({\r\n\t\t\t\tid: tool,\r\n\t\t\t\tlabel: this._root.language.translateAny(tool),\r\n\t\t\t\ticon: this._getToolIcon(tool)\r\n\t\t\t});\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\tprotected _getToolIcon(tool: DrawingTools): SVGElement {\r\n\t\treturn StockIcons.getIcon(tool);\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\r\n\t\tif (this.isDirty(\"tools\")) {\r\n\t\t\tthis._initTools();\r\n\t\t}\r\n\r\n\t\t// if (this.isDirty(\"name\")) {\r\n\t\t// \tthis.getPrivate(\"label\")!.innerHTML = this.get(\"name\", \"\");\r\n\t\t// }\r\n\r\n\t\t// todo icon\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\r\n\t\t// $array.each(this._itemDisposers, (x) => {\r\n\t\t// \tx.dispose();\r\n\t\t// });\r\n\t}\r\n\r\n\r\n}\r\n"]}