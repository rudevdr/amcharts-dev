{"version":3,"file":"IndicatorControl.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/toolbar/IndicatorControl.ts"],"names":[],"mappings":"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","sourcesContent":["import type { StockLegend } from \"../StockLegend\";\r\nimport type { StockPanel } from \"../StockPanel\";\r\n\r\nimport { Indicator } from \"../indicators/Indicator\";\r\nimport { AccumulationDistribution } from \"../indicators/AccumulationDistribution\";\r\nimport { AccumulativeSwingIndex } from \"../indicators/AccumulativeSwingIndex\";\r\nimport { Aroon } from \"../indicators/Aroon\";\r\nimport { AwesomeOscillator } from \"../indicators/AwesomeOscillator\";\r\nimport { BollingerBands } from \"../indicators/BollingerBands\";\r\nimport { ChaikinMoneyFlow } from \"../indicators/ChaikinMoneyFlow\";\r\nimport { ChaikinOscillator } from \"../indicators/ChaikinOscillator\";\r\nimport { CommodityChannelIndex } from \"../indicators/CommodityChannelIndex\";\r\nimport { DisparityIndex } from \"../indicators/DisparityIndex\";\r\nimport { MACD } from \"../indicators/MACD\";\r\nimport { MovingAverage } from \"../indicators/MovingAverage\";\r\nimport { MovingAverageDeviation } from \"../indicators/MovingAverageDeviation\";\r\nimport { MovingAverageEnvelope } from \"../indicators/MovingAverageEnvelope\";\r\nimport { StandardDeviation } from \"../indicators/StandardDeviation\";\r\nimport { TypicalPrice } from \"../indicators/TypicalPrice\";\r\nimport { MedianPrice } from \"../indicators/MedianPrice\";\r\nimport { OnBalanceVolume } from \"../indicators/OnBalanceVolume\";\r\nimport { Momentum } from \"../indicators/Momentum\";\r\nimport { RelativeStrengthIndex } from \"../indicators/RelativeStrengthIndex\";\r\nimport { StochasticMomentumIndex } from \"../indicators/StochasticMomentumIndex\";\r\nimport { StochasticOscillator } from \"../indicators/StochasticOscillator\";\r\nimport { WilliamsR } from \"../indicators/WilliamsR\";\r\nimport { Trix } from \"../indicators/Trix\";\r\nimport { Volume } from \"../indicators/Volume\";\r\nimport { VWAP } from \"../indicators/VWAP\";\r\nimport { ZigZag } from \"../indicators/ZigZag\";\r\n\r\nimport { JsonParser } from \"../../../plugins/json/Json\";\r\nimport { Serializer } from \"../../../plugins/json/Serializer\";\r\n\r\n//import type { IDisposer } from \"../../../core/util/Disposer\";\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport type { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport type Indicators = \"Accumulation Distribution\" | \"Accumulative Swing Index\" | \"Aroon\" | \"Awesome Oscillator\" | \"Bollinger Bands\" | \"Chaikin Money Flow\" | \"Chaikin Oscillator\" | \"Commodity Channel Index\" | \"Disparity Index\" | \"MACD\" | \"Momentum\" | \"Moving Average\" | \"Moving Average Deviation\" | \"Moving Average Envelope\" | \"On Balance Volume\" | \"Relative Strength Index\" | \"Standard Deviation\" | \"Stochastic Oscillator\" | \"Stochastic Momentum Index\" | \"Trix\" | \"Typical Price\" | \"Volume\" | \"VWAP\" | \"Williams R\" | \"Median Price\" | \"ZigZag\";\r\n\r\nexport interface IIndicator {\r\n\tid: string;\r\n\tname: string;\r\n\tcallback: () => Indicator;\r\n}\r\n\r\nexport interface IIndicatorControlSettings extends IDropdownListControlSettings {\r\n\tindicators?: Array<Indicators | IIndicator>;\r\n\tlegend?: StockLegend;\r\n}\r\n\r\nexport interface IIndicatorControlPrivate extends IDropdownListControlPrivate {\r\n\t/**\r\n\t * Here for backwards compatiblity befor [[IndicatorControl]] was\r\n\t * migrated to extend [[DropdownListControl]].\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IIndicatorControlEvents extends IDropdownListControlEvents {\r\n\tselected: {\r\n\t\titem: string | IDropdownListItem;\r\n\t\tindicator: Indicator | IIndicator;\r\n\t}\r\n}\r\n\r\n/**\r\n * A [[StockToolbar]] control for adding indicators to a [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/indicator-control/} for more info\r\n */\r\nexport class IndicatorControl extends DropdownListControl {\r\n\tpublic static className: string = \"IndicatorControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([IndicatorControl.className]);\r\n\r\n\tdeclare public _settings: IIndicatorControlSettings;\r\n\tdeclare public _privateSettings: IIndicatorControlPrivate;\r\n\tdeclare public _events: IIndicatorControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = this.getPrivate(\"dropdown\")!;\r\n\t\tthis.setPrivate(\"list\", list);\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tconst indicator = this.addIndicator(<Indicators>ev.item.id);\r\n\t\t\tif (this.events.isEnabled(\"selected\") && indicator) {\r\n\t\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\t\ttype: \"selected\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindicator: indicator,\r\n\t\t\t\t\titem: ev.item\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\r\n\t\tthis._initList();\r\n\r\n\t\t// Re-nit list if volume series is added or removed so that we can show/hide\r\n\t\t// volume-dependent indicators\r\n\t\tthis.get(\"stockChart\").on(\"volumeSeries\", () => this._initList());\r\n\t}\r\n\r\n\tprotected _initList(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst indicators = this.get(\"indicators\")!;\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(indicators, (indicator: Indicators | IIndicator) => {\r\n\t\t\tif ($type.isObject(indicator)) {\r\n\t\t\t\tif (this.supportsIndicator(indicator.id as Indicators)) {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tid: indicator.id,\r\n\t\t\t\t\t\tlabel: indicator.name\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this.supportsIndicator(indicator as Indicators)) {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tid: indicator,\r\n\t\t\t\t\t\tlabel: this._root.language.translateAny(indicator)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the indicator is supported in current chart setup.\r\n\t * \r\n\t * @param   indicatorId  Indicator ID\r\n\t * @return               Supported?\r\n\t */\r\n\tpublic supportsIndicator(indicatorId: Indicators): boolean {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst volumeIndicators = [\"Chaikin Money Flow\", \"Chaikin Oscillator\", \"On Balance Volume\", \"Volume\", \"VWAP\"];\r\n\t\treturn (stockChart.get(\"volumeSeries\") || volumeIndicators.indexOf(indicatorId) === -1) ? true : false;\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Indicator\");\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t\tif (this.isDirty(\"indicators\")) {\r\n\t\t\tthis._initList();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a specific indicator, adds it to chart, and returns the instance.\r\n\t * \r\n\t * @param   indicatorId  Indicator ID\r\n\t * @return               Indicator instance\r\n\t */\r\n\tpublic addIndicator(indicatorId: Indicators): Indicator | undefined {\r\n\r\n\t\tif (!this.supportsIndicator(indicatorId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tlet indicator: Indicator | undefined;\r\n\t\tconst stockSeries = stockChart.get(\"stockSeries\")!;\r\n\t\tconst volumeSeries = stockChart.get(\"volumeSeries\")!;\r\n\t\tconst legend = this.get(\"legend\");\r\n\r\n\t\tswitch (indicatorId) {\r\n\t\t\tcase \"Accumulation Distribution\":\r\n\t\t\t\tindicator = AccumulationDistribution.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Accumulative Swing Index\":\r\n\t\t\t\tindicator = AccumulativeSwingIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Aroon\":\r\n\t\t\t\tindicator = Aroon.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Awesome Oscillator\":\r\n\t\t\t\tindicator = AwesomeOscillator.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bollinger Bands\":\r\n\t\t\t\tindicator = BollingerBands.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Chaikin Money Flow\":\r\n\t\t\t\tindicator = ChaikinMoneyFlow.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Chaikin Oscillator\":\r\n\t\t\t\tindicator = ChaikinOscillator.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Commodity Channel Index\":\r\n\t\t\t\tindicator = CommodityChannelIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Disparity Index\":\r\n\t\t\t\tindicator = DisparityIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"MACD\":\r\n\t\t\t\tindicator = MACD.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Median Price\":\r\n\t\t\t\tindicator = MedianPrice.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Momentum\":\r\n\t\t\t\tindicator = Momentum.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average\":\r\n\t\t\t\tindicator = MovingAverage.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average Deviation\":\r\n\t\t\t\tindicator = MovingAverageDeviation.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average Envelope\":\r\n\t\t\t\tindicator = MovingAverageEnvelope.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Standard Deviation\":\r\n\t\t\t\tindicator = StandardDeviation.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Trix\":\r\n\t\t\t\tindicator = Trix.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Typical Price\":\r\n\t\t\t\tindicator = TypicalPrice.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"On Balance Volume\":\r\n\t\t\t\tindicator = OnBalanceVolume.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Relative Strength Index\":\r\n\t\t\t\tindicator = RelativeStrengthIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stochastic Momentum Index\":\r\n\t\t\t\tindicator = StochasticMomentumIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stochastic Oscillator\":\r\n\t\t\t\tindicator = StochasticOscillator.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Williams R\":\r\n\t\t\t\tindicator = WilliamsR.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Volume\":\r\n\t\t\t\tindicator = Volume.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"VWAP\":\r\n\t\t\t\tindicator = VWAP.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ZigZag\":\r\n\t\t\t\tindicator = ZigZag.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!indicator) {\r\n\t\t\t// Try searching in the list\r\n\t\t\t$array.eachContinue(this.get(\"indicators\", []), (item) => {\r\n\t\t\t\tif ($type.isObject(item) && item.id == indicatorId) {\r\n\t\t\t\t\tindicator = item.callback.call(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (indicator) {\r\n\t\t\tstockChart.indicators.push(indicator);\r\n\t\t\tif (indicator._editableSettings.length) {\r\n\t\t\t\tconst modal = stockChart.getPrivate(\"settingsModal\");\r\n\t\t\t\tmodal.events.once(\"done\", (ev) => {\r\n\t\t\t\t\tif (indicator) {\r\n\t\t\t\t\t\tif (!ev.settings) {\r\n\t\t\t\t\t\t\tindicator.dispose();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tmodal.openIndicator(indicator);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn indicator;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes all available indicators into an array of simple objects or\r\n\t * JSON.\r\n\t *\r\n\t * `output` parameter can either be `\"object\"` or `\"string\"` (default).\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/serializing-indicators-annotations/} for more info\r\n\t * @since 5.3.0\r\n\t * @param   output Output format\r\n\t * @param   indent Line indent in JSON\r\n\t * @return         Serialized indicators\r\n\t */\r\n\tpublic serializeIndicators(output: \"object\" | \"string\" = \"string\", indent?: string): Array<unknown> | string {\r\n\t\tconst res: Array<any> = [];\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.indicators.each((indicator) => {\r\n\t\t\tconst serializer = Serializer.new(this._root, {\r\n\t\t\t\texcludeSettings: [\"stockChart\", \"stockSeries\", \"volumeSeries\", \"legend\"]\r\n\t\t\t});\r\n\r\n\t\t\t// Panel\r\n\t\t\tconst json: any = {};\r\n\r\n\t\t\t// Series and legend\r\n\t\t\tif (indicator.get(\"stockSeries\")) {\r\n\t\t\t\tjson.__stockSeries = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator.get(\"volumeSeries\")) {\r\n\t\t\t\tjson.__volumeSeries = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst legend = indicator.get(\"legend\");\r\n\t\t\tif (legend) {\r\n\t\t\t\tlegend._walkParents((parent) => {\r\n\t\t\t\t\tif (parent.isType(\"StockPanel\")) {\r\n\t\t\t\t\t\tjson.__legendIndex = stockChart.panels.indexOf(parent as StockPanel);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Serialize\r\n\t\t\tjson.__indicator = serializer.serialize(indicator, 0);\r\n\r\n\t\t\tres.push(json);\r\n\t\t});\r\n\t\treturn output == \"object\" ? res : JSON.stringify(res, undefined, indent);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses data serialized with `serializeIndicators()` and adds indicators to\r\n\t * the chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/serializing-indicators-annotations/} for more info\r\n\t * @since 5.3.0\r\n\t * @param  data Serialized data\r\n\t */\r\n\tpublic unserializeIndicators(data: string | Array<any>): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tif ($type.isString(data)) {\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\t\t$array.each(data, (indicator) => {\r\n\r\n\t\t\t// Populate\r\n\t\t\tif (!indicator.__indicator.settings) {\r\n\t\t\t\tindicator.__indicator.settings = {};\r\n\t\t\t}\r\n\t\t\tindicator.__indicator.settings.stockChart = stockChart;\r\n\r\n\t\t\tif (indicator.__stockSeries && !indicator.__indicator.settings.stockSeries) {\r\n\t\t\t\tindicator.__indicator.settings.stockSeries = stockChart.get(\"stockSeries\");\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator.__volumeSeries && !indicator.__indicator.settings.volumeSeries) {\r\n\t\t\t\tindicator.__indicator.settings.volumeSeries = stockChart.get(\"volumeSeries\");\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator.__legendIndex !== undefined && !indicator.__indicator.settings.legend) {\r\n\t\t\t\t// Find a legend\r\n\t\t\t\tconst panel = stockChart.panels.getIndex(indicator.__legendIndex);\r\n\t\t\t\tif (panel) {\r\n\t\t\t\t\tpanel.walkChildren((child) => {\r\n\t\t\t\t\t\tif (child.isType(\"StockLegend\")) {\r\n\t\t\t\t\t\t\tindicator.__indicator.settings.legend = child;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Parse\r\n\t\t\tJsonParser.new(this._root).parse(indicator.__indicator).then((indicator: any) => {\r\n\t\t\t\tif (indicator instanceof Indicator) {\r\n\t\t\t\t\tstockChart.indicators.push(indicator);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n}"]}