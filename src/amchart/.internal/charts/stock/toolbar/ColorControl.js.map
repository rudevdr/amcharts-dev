{"version":3,"file":"ColorControl.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/toolbar/ColorControl.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ColorSet } from \"../../../core/util/ColorSet\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownColors } from \"./DropdownColors\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport StockToolbarCSS from \"./StockToolbarCSS\";\r\n\r\nexport interface IColorControlSettings extends IStockControlSettings {\r\n\tcolors?: ColorSet;\r\n\tuseOpacity?: boolean;\r\n}\r\n\r\nexport interface IColorControlPrivate extends IStockControlPrivate {\r\n\tdropdown?: DropdownColors;\r\n\tcolor?: Color;\r\n\topacity?: number;\r\n}\r\n\r\nexport interface IColorControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\tcolor: Color\r\n\t}\r\n\tselectedOpacity: {\r\n\t\topacity: number\r\n\t}\r\n}\r\n\r\n/**\r\n * Color picker control.\r\n */\r\nexport class ColorControl extends StockControl {\r\n\tpublic static className: string = \"ColorControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([ColorControl.className]);\r\n\r\n\tdeclare public _settings: IColorControlSettings;\r\n\tdeclare public _privateSettings: IColorControlPrivate;\r\n\tdeclare public _events: IColorControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst dropdownSettings: any = {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\"),\r\n\t\t\tuseOpacity: this.get(\"useOpacity\")\r\n\t\t}\r\n\t\tif (this.get(\"colors\")) {\r\n\t\t\tdropdownSettings.colors = this.get(\"colors\");\r\n\t\t}\r\n\t\tconst dropdown = DropdownColors.new(this._root, dropdownSettings);\r\n\t\tthis.setPrivate(\"dropdown\", dropdown);\r\n\r\n\t\tdropdown.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tdropdown.events.on(\"invoked\", (ev) => {\r\n\t\t\tthis.setPrivate(\"color\", ev.color);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\tcolor: ev.color,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tdropdown.events.on(\"invokedOpacity\", (ev) => {\r\n\t\t\tthis.setPrivate(\"opacity\", ev.opacity);\r\n\t\t\tthis.events.dispatch(\"selectedOpacity\", {\r\n\t\t\t\ttype: \"selectedOpacity\",\r\n\t\t\t\topacity: ev.opacity,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tdropdown.setPrivate(\"color\", this.getPrivate(\"color\"));\r\n\t\t\t\tdropdown.setPrivate(\"opacity\", this.getPrivate(\"opacity\"));\r\n\t\t\t\tthis.setTimeout(() => dropdown.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdropdown.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.onPrivate(\"color\", () => {\r\n\t\t\tconst color = this.getPrivate(\"color\");\r\n\t\t\tthis.getPrivate(\"icon\")!.style.backgroundColor = color ? color.toCSS(this.getPrivate(\"opacity\", 1)) : \"\";\r\n\t\t});\r\n\r\n\t\tthis.onPrivate(\"opacity\", () => {\r\n\t\t\tconst color = this.getPrivate(\"color\");\r\n\t\t\tthis.getPrivate(\"icon\")!.style.backgroundColor = color ? color.toCSS(this.getPrivate(\"opacity\", 1)) : \"\";\r\n\t\t});\r\n\r\n\t\t// Add checkered background for showing opacity\r\n\t\tconst bg = document.createElement(\"div\");\r\n\t\tbg.className = \"am5stock-control-icon-color-bg\";\r\n\t\tthis.getPrivate(\"icon\")!.appendChild(bg);\r\n\r\n\t\tthis.loadDefaultCSS();\r\n\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\tconst icon = StockIcons.getIcon(\"Color\");\r\n\t\t$utils.addClass(icon, \"am5stock-control-icon-color\");\r\n\t\treturn icon;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the default CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tconst disposer = StockToolbarCSS($utils.getShadowRoot(this._root.dom), this._root);\r\n\t\tthis._disposers.push(disposer);\r\n\t}\r\n\r\n}\r\n"]}