{"version":3,"file":"MovingAverage.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/indicators/MovingAverage.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport type { AxisRenderer } from \"../../xy/axes/AxisRenderer\";\r\n\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMovingAverageSettings extends IIndicatorSettings {\r\n\r\n\t/**\r\n\t * Type of the moving average.\r\n\t *\r\n\t * @default \"simple\"\r\n\t */\r\n\ttype?: \"simple\" | \"weighted\" | \"exponential\" | \"dema\" | \"tema\";\r\n\r\n\t/**\r\n\t * Offset.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\toffset?: number;\r\n\r\n}\r\n\r\nexport interface IMovingAveragePrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IMovingAverageEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MovingAverage extends Indicator {\r\n\tpublic static className: string = \"MovingAverage\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([MovingAverage.className]);\r\n\r\n\tdeclare public _settings: IMovingAverageSettings;\r\n\tdeclare public _privateSettings: IMovingAveragePrivate;\r\n\tdeclare public _events: IMovingAverageEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"offset\",\r\n\t\tname: this.root.language.translateAny(\"Offset\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}, {\r\n\t\tkey: \"type\",\r\n\t\tname: this.root.language.translateAny(\"Type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t}];\r\n\r\n\tpublic _prepareChildren() {\r\n\r\n\t\tif (this.isDirty(\"type\") || this.isDirty(\"offset\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t\tthis.setCustomData(\"type\", this.get(\"type\"));\r\n\t\t\tthis.setCustomData(\"offset\", this.get(\"offset\", 0));\r\n\t\t}\r\n\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst series = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"ma\",\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tthemeTags: [\"indicator\", \"movingaverage\"],\r\n\t\t\t\tname: \"MA\"\r\n\t\t\t}))\r\n\r\n\t\t\tseries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.series = series;\r\n\r\n\t\t\tthis._handleLegend(series);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tlet period = this.get(\"period\", 50);\r\n\t\t\tconst type = this.get(\"type\");\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"simple\":\r\n\t\t\t\t\tthis._sma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"weighted\":\r\n\t\t\t\t\tthis._wma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"exponential\":\r\n\t\t\t\t\tthis._ema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dema\":\r\n\t\t\t\t\tthis._dema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tema\":\r\n\t\t\t\t\tthis._tema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tconst offset = this.get(\"offset\", 0);\r\n\r\n\r\n\t\t\tif (offset != 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tconst baseDuration = (this.series.get(\"xAxis\") as DateAxis<AxisRenderer>).baseDuration();\r\n\t\t\t\tconst len = dataItems.length;\r\n\t\t\t\tconst firstTime = dataItems[0].get(\"valueX\", 0);\r\n\t\t\t\tconst lastTime = dataItems[len - 1].get(\"valueX\", 0);\r\n\r\n\t\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\t\tlet newX: number = 0;\r\n\r\n\t\t\t\t\tif (i + offset >= len) {\r\n\t\t\t\t\t\tnewX = lastTime + (offset - len + i + 1) * baseDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (i + offset < 0) {\r\n\t\t\t\t\t\tnewX = firstTime + (i + offset) * baseDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnewX = dataItems[i + offset].get(\"valueX\", 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.valueX = newX;\r\n\r\n\t\t\t\t\ti++;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]}