{"version":3,"file":"CommodityChannelIndex.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/indicators/CommodityChannelIndex.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAsF,MAAM,sBAAsB,CAAC;AAQ9I;;;;GAIG;AACH,MAAM,OAAO,qBAAsB,SAAQ,kBAAkB;IAQlD,SAAS;QAElB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAA;QAE7C,KAAK,CAAC,SAAS,EAAE,CAAC;QAElB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAC7B;YACC,GAAG,EAAE,QAAQ;YACb,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,QAAQ;SACd,EAAE;YACH,GAAG,EAAE,aAAa;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,OAAO;SACb,CACA,CAAA;IACF,CAAC;IAED;;OAEG;IACI,WAAW;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YACpD,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC5C,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAC/B,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAEtB,IAAI,aAAa,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;oBAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;wBACpC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBACjB,aAAa,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,CAAA;qBAC1C;oBACD,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC;oBACvC,QAAQ,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC;iBACzD;aACD;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9B;IACF,CAAC;;AAxDD;;;;WAAkC,uBAAuB;GAAC;AAC1D;;;;WAA0C,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\n\r\nexport interface ICommodityChannelIndexSettings extends IOverboughtOversoldSettings { }\r\n\r\nexport interface ICommodityChannelIndexPrivate extends IOverboughtOversoldPrivate { }\r\n\r\nexport interface ICommodityChannelIndexEvents extends IOverboughtOversoldEvents { }\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class CommodityChannelIndex extends OverboughtOversold {\r\n\tpublic static className: string = \"CommodityChannelIndex\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([CommodityChannelIndex.className]);\r\n\r\n\tdeclare public _settings: ICommodityChannelIndexSettings;\r\n\tdeclare public _privateSettings: ICommodityChannelIndexPrivate;\r\n\tdeclare public _events: ICommodityChannelIndexEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tthis._themeTags.push(\"commoditychannelindex\")\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis._editableSettings.unshift(\r\n\t\t\t{\r\n\t\t\t\tkey: \"period\",\r\n\t\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet data = this._getTypicalPrice(dataItems);\r\n\t\t\tlet period = this.get(\"period\", 20);\r\n\r\n\t\t\tthis._sma(data, period, \"value_y\", \"sma\");\r\n\r\n\t\t\tfor (let i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\tconst dataItem = data[i];\r\n\t\t\t\tconst value = dataItem.value_y;\r\n\t\t\t\tlet ma = dataItem.sma;\r\n\r\n\t\t\t\tlet meanDeviation = 0;\r\n\t\t\t\tif (i >= period - 1) {\r\n\r\n\t\t\t\t\tfor (let j = i; j > i - period; j--) {\r\n\t\t\t\t\t\tlet di = data[j];\r\n\t\t\t\t\t\tmeanDeviation += Math.abs(di.value_y - ma)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmeanDeviation = meanDeviation / period;\r\n\t\t\t\t\tdataItem.valueS = (value - ma) / (0.015 * meanDeviation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]}