{"version":3,"file":"OnBalanceVolume.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/indicators/OnBalanceVolume.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,cAAc,EAA0E,MAAM,kBAAkB,CAAC;AAC1H,OAAO,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AAkBxD;;;;GAIG;AACH,MAAM,OAAO,eAAgB,SAAQ,cAAc;IAAnD;;QAaC;;;;mBAAwD,CAAC;oBACxD,GAAG,EAAE,aAAa;oBAClB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;oBAC9C,IAAI,EAAE,OAAO;iBACb,CAAC;WAAC;IA4EJ,CAAC;IA1EO,SAAS;QACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACxC,KAAK,CAAC,SAAS,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YACxD,SAAS,EAAE,CAAC,WAAW,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,QAAQ;YACrB,WAAW,EAAE,KAAK;YAClB,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;YAC/B,IAAI,EAAE,SAAS;SACf,CAAC,CAAC,CAAA;IACJ,CAAC;IAEM,gBAAgB;QACtB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACvB;QACD,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACI,WAAW;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YAEhB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAE9B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YACpD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAE9C,IAAI,IAAI,GAAe,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,QAAQ,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YAEtB,IAAI,YAAY,IAAI,GAAG,GAAG,CAAC,EAAE;gBAC5B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAiB,CAAC;gBAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBAEzB,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC;oBAEzB,IAAI,CAAC,IAAI,IAAI,EAAE;wBACd,MAAM,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,MAAM,GAAG,CAAC,CAAC;wBACf,IAAI,QAAQ,EAAE;4BACb,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;yBACnC;wBAED,IAAI,GAAG,GAAG,QAAQ,CAAC;wBACnB,IAAI,CAAC,GAAG,EAAE,EAAE;4BACX,GAAG,IAAI,MAAM,CAAC;yBACd;6BACI,IAAI,CAAC,GAAG,EAAE,EAAE;4BAChB,GAAG,IAAI,MAAM,CAAC;yBACd;wBAED,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;wBAEnB,QAAQ,GAAG,GAAG,CAAC;wBACf,EAAE,GAAG,CAAC,CAAC;qBACP;iBACD;aACD;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9B;IACF,CAAC;;AA3FD;;;;WAAkC,iBAAiB;GAAC;AACpD;;;;WAA0C,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nexport interface IOnBalanceVolumeSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Chart's main volume series.\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n\r\n}\r\n\r\nexport interface IOnBalanceVolumePrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IOnBalanceVolumeEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class OnBalanceVolume extends ChartIndicator {\r\n\tpublic static className: string = \"OnBalanceVolume\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([OnBalanceVolume.className]);\r\n\r\n\tdeclare public _settings: IOnBalanceVolumeSettings;\r\n\tdeclare public _privateSettings: IOnBalanceVolumePrivate;\r\n\tdeclare public _events: IOnBalanceVolumeEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"onbalancevolume\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.yAxis.set(\"numberFormat\", \"#.###a\");\r\n\t}\t\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"obv\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"volumeSeries\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet previous = 0;\r\n\t\t\tlet len = data.length;\r\n\r\n\t\t\tif (volumeSeries && len > 1) {\r\n\t\t\t\tlet cy = data[0].value_y as number;\r\n\r\n\t\t\t\tfor (let i = 1; i < len; i++) {\r\n\t\t\t\t\tconst dataItem = data[i];\r\n\r\n\t\t\t\t\tlet c = dataItem.value_y;\r\n\r\n\t\t\t\t\tif (c != null) {\r\n\t\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\t\tlet volume = 0;\r\n\t\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet obv = previous;\r\n\t\t\t\t\t\tif (c > cy) {\r\n\t\t\t\t\t\t\tobv += volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c < cy) {\r\n\t\t\t\t\t\t\tobv -= volume;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.obv = obv;\r\n\r\n\t\t\t\t\t\tprevious = obv;\r\n\t\t\t\t\t\tcy = c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]}