{"version":3,"file":"StochasticOscillator.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/indicators/StochasticOscillator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IStochasticOscillatorSettings extends IOverboughtOversoldSettings {\r\n\t/**\r\n\t * A color for \"slow\" section.\r\n\t */\r\n\tslowColor?: Color;\r\n\r\n\t/**\r\n\t * Smoothing \"k\" parameter.\r\n\t */\r\n\tkSmoothing?: number;\r\n\r\n\t/**\r\n\t * Smoothing \"d\" parameter.\r\n\t */\r\n\tdSmoothing?: number;\r\n}\r\n\r\nexport interface IStochasticOscillatorPrivate extends IOverboughtOversoldPrivate {\r\n}\r\n\r\nexport interface IStochasticOscillatorEvents extends IOverboughtOversoldEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class StochasticOscillator extends OverboughtOversold {\r\n\tpublic static className: string = \"StochasticOscillator\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([StochasticOscillator.className]);\r\n\r\n\tdeclare public _settings: IStochasticOscillatorSettings;\r\n\tdeclare public _privateSettings: IStochasticOscillatorPrivate;\r\n\tdeclare public _events: IStochasticOscillatorEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tpublic slowSeries!: LineSeries;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"stochastic\");\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis._editableSettings.unshift(\r\n\t\t\t{\r\n\t\t\t\tkey: \"period\",\r\n\t\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}, {\r\n\t\t\tkey: \"kSmoothing\",\r\n\t\t\tname: this.root.language.translateAny(\"K period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t},{\r\n\t\t\tkey: \"dSmoothing\",\r\n\t\t\tname: this.root.language.translateAny(\"SMA period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t},  {\r\n\t\t\tkey: \"slowColor\",\r\n\t\t\tname: this.root.language.translateAny(\"SMA period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}\r\n\t\t)\r\n\r\n\t\tthis.yAxis.setAll({ min: 0, max: 100, strictMinMax: true });\r\n\r\n\t\tconst slowSeries = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"slow\",\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tgroupDataDisabled: true,\r\n\t\t\tthemeTags: [\"indicator\", \"slow\"]\r\n\t\t}))\r\n\r\n\t\tthis.slowSeries = slowSeries;\r\n\t}\r\n\r\n\r\n\tpublic _updateChildren() {\r\n\t\tif (this.isDirty(\"kSmoothing\") || this.isDirty(\"dSmoothing\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t\tthis.setCustomData(\"dSmoothing\", this.get(\"dSmoothing\"));\r\n\t\t\tthis.setCustomData(\"kSmoothing\", this.get(\"kSmoothing\"));\r\n\t\t}\r\n\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"slowColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.slowSeries, this.get(\"slowColor\"), \"slowColor\")\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\t\t\tlet data: Array<any> = [];\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tconst valueX = dataItem.get(\"valueX\");\r\n\t\t\t\tlet k;\r\n\t\t\t\tif (index >= period - 1) {\r\n\t\t\t\t\tlet value = this._getValue(dataItem);\r\n\r\n\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\tlet lp = Infinity;\r\n\t\t\t\t\t\tlet hp = -lp;\r\n\t\t\t\t\t\tfor (let j = index; j > index - period; j--) {\r\n\t\t\t\t\t\t\tlet h = dataItems[j].get(\"highValueY\");\r\n\t\t\t\t\t\t\tlet l = dataItems[j].get(\"lowValueY\");\r\n\r\n\t\t\t\t\t\t\tif (h != null && l != null) {\r\n\t\t\t\t\t\t\t\tif (l < lp) {\r\n\t\t\t\t\t\t\t\t\tlp = l;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (h > hp) {\r\n\t\t\t\t\t\t\t\t\thp = h;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tk = (value - lp) / (hp - lp) * 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (k == null) {\r\n\t\t\t\t\tdata.push({ valueX: valueX });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdata.push({ valueX: valueX, value_y: k });\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\r\n\t\t\tperiod = this.get(\"kSmoothing\", 1);\r\n\t\t\tthis._sma(data, period, \"value_y\", \"valueS\");\r\n\r\n\t\t\tperiod = this.get(\"dSmoothing\", 3);\r\n\t\t\tthis._sma(data, period, \"valueS\", \"slow\");\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.slowSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]}