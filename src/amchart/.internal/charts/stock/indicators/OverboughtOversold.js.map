{"version":3,"file":"OverboughtOversold.js","sourceRoot":"","sources":["../../../../../../../src/.internal/charts/stock/indicators/OverboughtOversold.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { IValueAxisDataItem } from \"../../xy/axes/ValueAxis\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries, ILineSeriesAxisRange } from \"../../xy/series/LineSeries\";\r\nimport { Button } from \"../../../core/render/Button\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { AxisBullet } from \"../../xy/axes/AxisBullet\";\r\nimport type { AxisRendererY } from \"../../xy/axes/AxisRendererY\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\n\r\nexport interface IOverboughtOversoldSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * A value for \"overbought\" threshold.\r\n\t */\r\n\toverBought?: number;\r\n\r\n\t/**\r\n\t * A value for \"oversold\" threshold.\r\n\t */\r\n\toverSold?: number;\r\n\r\n\t/**\r\n\t * A color for \"overbought\" section.\r\n\t */\r\n\toverBoughtColor?: Color;\r\n\r\n\t/**\r\n\t * A color for \"oversold\" section.\r\n\t */\r\n\toverSoldColor?: Color;\r\n}\r\n\r\nexport interface IOverboughtOversoldPrivate extends IChartIndicatorPrivate { }\r\n\r\nexport interface IOverboughtOversoldEvents extends IChartIndicatorEvents { }\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class OverboughtOversold extends ChartIndicator {\r\n\tpublic static className: string = \"OverboughtOversold\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([OverboughtOversold.className]);\r\n\r\n\tdeclare public _settings: IOverboughtOversoldSettings;\r\n\tdeclare public _privateSettings: IOverboughtOversoldPrivate;\r\n\tdeclare public _events: IOverboughtOversoldEvents;\r\n\r\n\tpublic overBought!: DataItem<IValueAxisDataItem>;\r\n\tpublic middle!: DataItem<IValueAxisDataItem>;\r\n\tpublic overSold!: DataItem<IValueAxisDataItem>;\r\n\r\n\tpublic overSoldRange!: ILineSeriesAxisRange;\r\n\tpublic overBoughtRange!: ILineSeriesAxisRange;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"overBought\",\r\n\t\tname: this.root.language.translateAny(\"Overbought\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"overBoughtColor\",\r\n\t\tname: this.root.language.translateAny(\"Overbought\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"overSold\",\r\n\t\tname: this.root.language.translateAny(\"Oversold\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"overSoldColor\",\r\n\t\tname: this.root.language.translateAny(\"Oversold\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"overboughtoversold\");\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst chart = this.panel;\r\n\t\tconst yAxis = this.yAxis;\r\n\t\tyAxis.setAll({ strictMinMax: true, autoZoom: false });\r\n\r\n\t\t// middle grid\r\n\t\tthis.middle = this.yAxis.createAxisRange(this.yAxis.makeDataItem({}));\r\n\t\tconst middleGrid = this.middle.get(\"grid\")!;\r\n\t\tmiddleGrid.setAll({ themeTags: [\"middlegrid\"] });\r\n\t\tmiddleGrid._applyThemes();\r\n\r\n\t\tconst middleLabel = this.middle.get(\"label\")!;\r\n\t\tmiddleLabel.setAll({ visible: true, forceHidden: false });\r\n\r\n\t\tconst opposite = (yAxis.get(\"renderer\") as AxisRendererY).get(\"opposite\");\r\n\t\tlet side = \"left\";\r\n\t\tif (opposite) {\r\n\t\t\tside = \"right\"\r\n\t\t}\r\n\r\n\t\t// overbought range\r\n\t\tconst overBought = yAxis.makeDataItem({});\r\n\t\tthis.overBought = overBought;\r\n\t\toverBought.set(\"endValue\", 500);\r\n\t\toverBought.set(\"affectsMinMax\", false);\r\n\r\n\t\tconst overBoughtRB = Button.new(this._root, {\r\n\t\t\tthemeTags: [\"rangegrip\", \"vertical\", side],\r\n\t\t\ticon: Graphics.new(this._root, {\r\n\t\t\t\tthemeTags: [\"rangegrip\", \"icon\"]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// restrict from being dragged vertically\r\n\t\toverBoughtRB.adapters.add(\"x\", function() {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t// restrict from being dragged outside of plot\r\n\t\toverBoughtRB.adapters.add(\"y\", function(y) {\r\n\t\t\tif ($type.isNumber(y)) {\r\n\t\t\t\treturn $math.fitToRange(y, 0, chart.plotContainer.height());\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t});\r\n\r\n\t\t// change range when y changes\r\n\t\toverBoughtRB.events.on(\"dragged\", () => {\r\n\t\t\tthis._updateRange(overBoughtRB, \"overBought\");\r\n\t\t});\r\n\r\n\t\toverBought.set(\"bullet\", AxisBullet.new(this._root, {\r\n\t\t\tlocation: 0,\r\n\t\t\tsprite: overBoughtRB\r\n\t\t}))\r\n\r\n\t\tconst overBoughtRange = this.series.createAxisRange(overBought);\r\n\t\tthis.overBoughtRange = overBoughtRange;\r\n\t\tconst overBoughtFills = overBoughtRange.fills;\r\n\t\tif (overBoughtFills) {\r\n\t\t\toverBoughtFills.template.set(\"themeTags\", [\"overbought\", \"fill\"]);\r\n\t\t}\r\n\r\n\t\tconst overBoughtGrid = overBought.get(\"grid\")!;\r\n\t\toverBoughtGrid.setAll({ themeTags: [\"overbought\"], visible: true });\r\n\t\toverBoughtGrid._applyThemes();\r\n\r\n\t\tconst overBoughtLabel = overBought.get(\"label\")!;\r\n\t\toverBoughtLabel.setAll({ visible: true, forceHidden: false, location: 0 });\r\n\r\n\t\t// oversold range\r\n\t\tconst overSold = yAxis.makeDataItem({});\r\n\t\tthis.overSold = overSold;\r\n\t\toverSold.set(\"endValue\", -500);\r\n\t\toverSold.set(\"affectsMinMax\", false);\r\n\r\n\r\n\t\tconst overSoldRB = Button.new(this._root, {\r\n\t\t\tthemeTags: [\"rangegrip\", \"vertical\", side],\r\n\t\t\ticon: Graphics.new(this._root, {\r\n\t\t\t\tthemeTags: [\"rangegrip\", \"icon\"]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// restrict from being dragged vertically\r\n\t\toverSoldRB.adapters.add(\"x\", function() {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t// restrict from being dragged outside of plot\r\n\t\toverSoldRB.adapters.add(\"y\", function(y) {\r\n\t\t\tif ($type.isNumber(y)) {\r\n\t\t\t\treturn $math.fitToRange(y, 0, chart.plotContainer.height());\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t});\r\n\r\n\t\t// change range when y changes\r\n\t\toverSoldRB.events.on(\"dragged\", () => {\r\n\t\t\tthis._updateRange(overSoldRB, \"overSold\");\r\n\t\t});\r\n\r\n\t\toverSold.set(\"bullet\", AxisBullet.new(this._root, {\r\n\t\t\tlocation: 0,\r\n\t\t\tsprite: overSoldRB\r\n\t\t}))\r\n\r\n\r\n\t\tconst overSoldRange = this.series.createAxisRange(overSold);\r\n\t\tthis.overSoldRange = overSoldRange;\r\n\t\tconst overSoldFills = overSoldRange.fills;\r\n\t\tif (overSoldFills) {\r\n\t\t\toverSoldFills.template.set(\"themeTags\", [\"oversold\", \"fill\"]);\r\n\t\t}\r\n\r\n\t\tconst overSoldGrid = overSold.get(\"grid\")!;\r\n\t\toverSoldGrid.setAll({ themeTags: [\"oversold\"], visible: true });\r\n\t\toverSoldGrid._applyThemes();\r\n\r\n\t\tconst overSoldLabel = overSold.get(\"label\")!;\r\n\t\toverSoldLabel.setAll({ visible: true, forceHidden: false, location: 0 });\r\n\t}\r\n\r\n\tprotected _updateRange(button: Button, key: \"overBought\" | \"overSold\") {\r\n\t\tconst chart = this.yAxis.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst position = this.yAxis.toAxisPosition(button.y() / chart.plotContainer.height());\r\n\t\t\tthis.set(key, Math.round(this.yAxis.positionToValue(position)));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"valueS\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tconst overBoughtLabel = this.overBought.get(\"label\")!;\r\n\t\tconst overSoldLabel = this.overSold.get(\"label\")!;\r\n\t\tconst middleLabel = this.middle.get(\"label\")!;\r\n\r\n\t\tif (this.isDirty(\"overBought\") || this.isDirty(\"overSold\")) {\r\n\t\t\tconst numberFormatter = this.getNumberFormatter();\r\n\r\n\t\t\tconst overSoldValue = this.get(\"overSold\", 0);\r\n\t\t\tconst overBoughtValue = this.get(\"overBought\", 0);\r\n\t\t\tconst middleValue = overSoldValue + (overBoughtValue - overSoldValue) / 2;\r\n\r\n\t\t\toverBoughtLabel.set(\"text\", numberFormatter.format(overBoughtValue));\r\n\t\t\toverSoldLabel.set(\"text\", numberFormatter.format(overSoldValue));\r\n\t\t\tmiddleLabel.set(\"text\", numberFormatter.format(middleValue));\r\n\r\n\t\t\tthis.overBought.set(\"value\", overBoughtValue);\r\n\t\t\tthis.overSold.set(\"value\", overSoldValue);\r\n\r\n\t\t\tthis.middle.set(\"value\", middleValue);\r\n\t\t\tthis.yAxis.set(\"baseValue\", middleValue);\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"overSoldColor\")) {\r\n\t\t\tconst color = this.get(\"overSoldColor\");\r\n\t\t\toverSoldLabel.set(\"fill\", color);\r\n\r\n\t\t\tthis.overSold.get(\"grid\")!.set(\"stroke\", color);\r\n\t\t\tthis.overSoldRange.fills!.template.set(\"fill\", color);\r\n\t\t\tthis.overSoldRange.strokes!.template.set(\"stroke\", color);\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"overBoughtColor\")) {\r\n\t\t\tconst color = this.get(\"overBoughtColor\");\r\n\t\t\toverBoughtLabel.set(\"fill\", color);\r\n\r\n\t\t\tthis.overBought.get(\"grid\")!.set(\"stroke\", color);\r\n\t\t\tthis.overBoughtRange.fills!.template.set(\"fill\", color);\r\n\t\t\tthis.overBoughtRange.strokes!.template.set(\"stroke\", color);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\r\n\t\tif (this.isDirty(\"period\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t}\r\n\r\n\t\tsuper._updateChildren();\r\n\t}\r\n}"]}