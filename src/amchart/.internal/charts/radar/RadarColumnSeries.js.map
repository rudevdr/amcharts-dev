{"version":3,"file":"RadarColumnSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/radar/RadarColumnSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { AxisRendererCircular } from \"./AxisRendererCircular\";\nimport type { AxisRendererRadial } from \"./AxisRendererRadial\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { RadarChart } from \"./RadarChart\";\n\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"../xy/series/BaseColumnSeries\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface IRadarColumnSeriesDataItem extends IBaseColumnSeriesDataItem {\n\n\t/**\n\t * Actual radius of the column in pixels.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Actual inner radius of the column in pixels.\n\t */\n\tinnerRadius?: number;\n\n\t/**\n\t * Actual start angle of the column in degrees.\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * Actual end angle of the column in degrees.\n\t */\n\tendAngle?: number;\n\n}\n\nexport interface IRadarColumnSeriesSettings extends IBaseColumnSeriesSettings {\n}\n\nexport interface IRadarColumnSeriesPrivate extends IBaseColumnSeriesPrivate {\n}\n\nexport interface IRadarColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\n\n\t/**\n\t * List of columns in a range.\n\t */\n\tcolumns: ListTemplate<Slice>\n\n}\n\n/**\n * A column series for use in a [[RadarChart]].\n *\n * @important\n */\nexport class RadarColumnSeries extends BaseColumnSeries {\n\n\tdeclare public _settings: IRadarColumnSeriesSettings;\n\tdeclare public _privateSettings: IRadarColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IRadarColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IRadarColumnSeriesAxisRange;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Slice>): Slice {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all columns in series.\n\t *\n\t * `columns.template` can be used to set default settings for all columns,\n\t * or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly columns: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tposition: \"absolute\",\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"radar\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tpublic static className: string = \"RadarColumnSeries\";\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([RadarColumnSeries.className]);\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tdeclare public chart: RadarChart | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"maskContent\", false);\n\t\tthis.bulletsContainer.set(\"maskContent\", false);\n\t\tthis.bulletsContainer.set(\"mask\", Graphics.new(this._root, {}));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\tconst rendererY = xAxis.get(\"renderer\") as AxisRendererRadial;\n\n\t\tconst radius = yAxis.get(\"renderer\").positionToCoordinate(positionY) + rendererY.getPrivate(\"innerRadius\", 0);\n\n\t\tconst rendererX = xAxis.get(\"renderer\") as AxisRendererCircular;\n\t\tconst angle = rendererX.positionToAngle(positionX);\n\n\t\treturn { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number) {\n\n\t\tgraphics.setPrivate(\"visible\", true);\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst rendererX = xAxis.get(\"renderer\") as AxisRendererCircular;\n\t\tconst rendererY = yAxis.get(\"renderer\") as AxisRendererRadial;\n\n\t\tconst axisInnerRadius = rendererY.getPrivate(\"innerRadius\", 0);\n\n\t\tconst startAngle = rendererX.fitAngle(rendererX.positionToAngle(l));\n\t\tconst endAngle = rendererX.fitAngle(rendererX.positionToAngle(r));\n\n\t\tlet innerRadius = rendererY.positionToCoordinate(b) + axisInnerRadius;\n\t\tlet radius = rendererY.positionToCoordinate(t) + axisInnerRadius;\n\n\t\tconst slice = graphics as Slice;\n\n\t\tdataItem.setRaw(\"startAngle\", startAngle);\n\t\tdataItem.setRaw(\"endAngle\", endAngle);\n\t\tdataItem.setRaw(\"innerRadius\", innerRadius);\n\t\tdataItem.setRaw(\"radius\", radius);\n\n\t\tlet axisStartAngle = 0;\n\t\tlet axisEndAngle = 360;\n\n\t\tif (yAxis == this.get(\"baseAxis\")) {\n\t\t\taxisStartAngle = rendererY.getPrivate(\"startAngle\", 0);\n\t\t\taxisEndAngle = rendererY.getPrivate(\"endAngle\", 360);\n\t\t}\n\t\telse {\n\t\t\taxisStartAngle = rendererX.getPrivate(\"startAngle\", 0);\n\t\t\taxisEndAngle = rendererX.getPrivate(\"endAngle\", 360);\n\t\t}\n\n\t\tif (axisStartAngle > axisEndAngle) {\n\t\t\t[axisStartAngle, axisEndAngle] = [axisEndAngle, axisStartAngle];\n\t\t}\n\n\t\tif ((endAngle <= axisStartAngle) || (startAngle >= axisEndAngle) || (radius <= axisInnerRadius && innerRadius <= axisInnerRadius)) {\n\t\t\tslice.setPrivate(\"visible\", false);\n\t\t}\n\n\t\tslice.setAll({ innerRadius, radius, startAngle, arc: endAngle - startAngle });\n\t}\n\n\tprotected _shouldInclude(position: number): boolean {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tif (position < xAxis.get(\"start\") || position > xAxis.get(\"end\")) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _shouldShowBullet(positionX: number, _positionY: number): boolean {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tif (positionX < xAxis.get(\"start\") || positionX > xAxis.get(\"end\")) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._showBullets;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as any;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst series = dataItem.component;\n\n\t\t\tconst xAxis = series.get(\"xAxis\");\n\t\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, series._xField, locationX, series.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, series._yField, locationY, series.get(\"vcy\", 1));\n\n\t\t\tconst startAngle = dataItem.get(\"startAngle\", 0);\n\t\t\tconst endAngle = dataItem.get(\"endAngle\", 0);\n\n\t\t\tconst radius = dataItem.get(\"radius\", 0);\n\t\t\tconst innerRadius = dataItem.get(\"innerRadius\", 0);\n\n\t\t\tif (series._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", true);\n\n\t\t\t\tconst angle = startAngle + (endAngle - startAngle) * locationX;\n\t\t\t\tconst r = innerRadius + (radius - innerRadius) * locationY;\n\n\t\t\t\tsprite.set(\"x\", $math.cos(angle) * r);\n\t\t\t\tsprite.set(\"y\", $math.sin(angle) * r);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleMaskBullets() {\n\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Slice._new(this._root, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"radar\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n"]}