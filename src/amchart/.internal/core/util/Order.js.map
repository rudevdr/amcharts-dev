{"version":3,"file":"Order.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/util/Order.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,UAAU,OAAO,CAAsC,IAAO,EAAE,KAAQ;IAC7E,IAAI,IAAI,KAAK,KAAK,EAAE;QACnB,OAAO,CAAC,CAAC;KAET;SAAM,IAAI,IAAI,GAAG,KAAK,EAAE;QACxB,OAAO,CAAC,CAAC,CAAC;KAEV;SAAM;QACN,OAAO,CAAC,CAAC;KACT;AACF,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,YAAY,CAAI,IAAkB,EAAE,KAAmB,EAAE,CAAwB;IAChG,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;IAC/B,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;IAEjC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;QAChC,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,OAAO,KAAK,CAAC;SACb;KACD;IAED,OAAO,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AACzC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,OAAO,CAAC,KAAY;IACnC,IAAI,KAAK,GAAG,CAAC,EAAE;QACd,OAAO,CAAC,CAAC;KAET;SAAM,IAAI,KAAK,GAAG,CAAC,EAAE;QACrB,OAAO,CAAC,CAAC,CAAC;KAEV;SAAM;QACN,OAAO,CAAC,CAAC;KACT;AACF,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,aAAa,CAAC,CAAS,EAAE,CAAS;IACjD,IAAI,CAAC,KAAK,CAAC,EAAE;QACZ,OAAO,CAAC,CAAC;KAET;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACjB,OAAO,CAAC,CAAC,CAAC;KAEV;SAAM;QACN,OAAO,CAAC,CAAC;KACT;AACF,CAAC","sourcesContent":["export type Order = -1 | 0 | 1;\n\n/**\n * @ignore\n */\nexport function compare<A extends string | number | boolean>(left: A, right: A): Order {\n\tif (left === right) {\n\t\treturn 0;\n\n\t} else if (left < right) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareArray<A>(left: ArrayLike<A>, right: ArrayLike<A>, f: (x: A, y: A) => Order): Order {\n\tconst leftLength = left.length;\n\tconst rightLength = right.length;\n\n\tconst length = Math.min(leftLength, rightLength);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst order = f(left[i], right[i]);\n\n\t\tif (order !== 0) {\n\t\t\treturn order;\n\t\t}\n\t}\n\n\treturn compare(leftLength, rightLength);\n}\n\n/**\n * @ignore\n */\nexport function reverse(order: Order): Order {\n\tif (order < 0) {\n\t\treturn 1;\n\n\t} else if (order > 0) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareNumber(a: number, b: number): Order {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n"]}