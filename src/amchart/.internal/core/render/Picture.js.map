{"version":3,"file":"Picture.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/render/Picture.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IPicture } from \"./backend/Renderer\";\nimport type { Color } from \"../util/Color\";\n\nimport { Sprite, ISpriteEvents, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\n\nimport * as $type from \"../util/Type\";\n\nexport interface IPictureSettings extends ISpriteSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * CORS settings for loading the image. Defaults to \"anonymous\".\n\t *\n\t * @since 5.3.6\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin} for more info\n\t */\n\tcors?: string | null;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n}\n\nexport interface IPicturePrivate extends ISpritePrivate {\n}\n\nexport interface IPictureEvents extends ISpriteEvents {\n\n\t/**\n\t * Invoked when picture is loaded.\n\t */\n\tloaded: {};\n\n\t/**\n\t * Invoked when picture load error happens.\n\t */\n\tloaderror: {};\n}\n\n/**\n * Displays an image.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\n * @important\n */\nexport class Picture extends Sprite {\n\n\tdeclare public _settings: IPictureSettings;\n\tdeclare public _privateSettings: IPicturePrivate;\n\n\tpublic _display: IPicture = this._root._renderer.makePicture(undefined);\n\n\tpublic static className: string = \"Picture\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Picture.className]);\n\tdeclare public _events: IPictureEvents;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\tconst width = this.get(\"width\");\n\t\t\tthis._display.width = $type.isNumber(width) ? width : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"height\")) {\n\t\t\tconst height = this.get(\"height\");\n\t\t\tthis._display.height = $type.isNumber(height) ? height : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowColor\")) {\n\t\t\tthis._display.clear();\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tthis._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowBlur\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowBlur = this.get(\"shadowBlur\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetX\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOpacity\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOpacity = this.get(\"shadowOpacity\");\n\t\t}\n\n\t\tif (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tlet eventType: \"loaded\" | \"loaderror\" = \"loaded\";\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.get(\"cors\", \"anonymous\");\n\t\t\timage.src = src!;\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._display.image = image;\n\t\t\t\tthis._updateSize();\n\t\t\t}).catch((_error: any) => {\n\t\t\t\teventType = \"loaderror\";\n\t\t\t});\n\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\tconst image = this._display.image;\n\t\tif (image) {\n\t\t\tlet w = this.getPrivate(\"width\", this.get(\"width\"));\n\t\t\tlet h = this.getPrivate(\"height\", this.get(\"height\"));\n\t\t\tconst r = image.width && image.height ? image.width / image.height : 0;\n\n\t\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\telse if ($type.isNumber(w) && r) {\n\t\t\t\th = w / r;\n\t\t\t}\n\t\t\telse if ($type.isNumber(h) && r) {\n\t\t\t\tw = h * r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw = image.width;\n\t\t\t\th = image.height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(w)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t}\n\t\t\tif ($type.isNumber(h)) {\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirty();\n\t\t}\n\t}\n}\n"]}