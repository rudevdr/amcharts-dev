{"version":3,"file":"Pattern.js","sourceRoot":"","sources":["../../../../../../../src/.internal/core/render/patterns/Pattern.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IGraphics, IPattern } from \"../backend/Renderer\";\nimport type { Color } from \"../../util/Color\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../util/Entity\";\n\nexport interface IPatternSettings extends IEntitySettings {\n\n\t/**\n\t * Rotation of patterm in degrees. Supported values: -90 to 90.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Rotation} for more info\n\t */\n\trotation?: number;\n\n\t/**\n\t * How pattern tiles are repeated when filling the area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Repetition} for more info\n\t */\n\trepetition?: \"repeat\" | \"repeat-x\" | \"repeat-y\" | \"no-repeat\";\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\twidth?: number;\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\theight?: number;\n\n\t/**\n\t * Color of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Opacity of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolorOpacity?: number;\n\n\t/**\n\t * Width of the pattern's line elements.\n\t *\n\t * @default 1\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Color to fill gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Opacity of the fill for gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfillInherited?: boolean;\n}\n\nexport interface IPatternPrivate extends IEntityPrivate {\n}\n\nexport interface IPatternEvents extends IEntityEvents {\n}\n\n/**\n * Base class for patterns.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class Pattern extends Entity {\n\tprotected _afterNew() {\n\t\t// Applying themes because pattern will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tdeclare public _settings: IPatternSettings;\n\tdeclare public _privateSettings: IPatternPrivate;\n\n\tpublic static className: string = \"Pattern\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Pattern.className]);\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\tpublic _backgroundDisplay: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tprotected _pattern: IPattern | undefined | null;\n\n\tpublic get pattern(): IPattern | undefined | null {\n\t\treturn this._pattern;\n\t}\n\n\tprotected _draw(): void { }\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\n\t\tthis._checkDirtyFill();\n\t}\n\n\tprotected _checkDirtyFill() {\n\t\tif (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tconst repetition = this.get(\"repetition\", \"\");\n\t\t\tconst width = this.get(\"width\", 100);\n\t\t\tconst height = this.get(\"height\", 100);\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\", 1);\n\n\t\t\tconst backgroundDisplay = this._backgroundDisplay;\n\t\t\tconst display = this._display;\n\n\t\t\tdisplay.clear();\n\t\t\tbackgroundDisplay.clear();\n\n\t\t\tif (fill && (fillOpacity > 0)) {\n\t\t\t\tbackgroundDisplay.beginFill(fill, fillOpacity);\n\t\t\t\tbackgroundDisplay.drawRect(0, 0, width, height);\n\t\t\t\tbackgroundDisplay.endFill();\n\t\t\t}\n\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t\t//display.pivot = { x: width / 2, y: height / 2 };\n\t\t\tthis._draw();\n\n\t\t\tthis._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\n\t\t}\n\n\t\tthis._clear = false;\n\t}\n}\n"]}