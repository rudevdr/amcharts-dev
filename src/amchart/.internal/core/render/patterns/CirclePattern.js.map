{"version":3,"file":"CirclePattern.js","sourceRoot":"","sources":["../../../../../../../src/.internal/core/render/patterns/CirclePattern.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\n\nimport * as $math from \"../../util/Math\";\n\nexport interface ICirclePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between circles, in pixels.\n\t *\n\t * @default 3\n\t */\n\tgap?: number;\n\n\t/**\n\t * Radius of the circles, in pixels.\n\t *\n\t * @default 3\n\t */\n\tradius?: number;\n\n\t/**\n\t * If set to `true`, will place every second circle, creating checkered\n\t * pattern.\n\t *\n\t * @default false\n\t */\n\tcheckered?: boolean;\n\n\t/**\n\t * Center circles.\n\t *\n\t * @default true\n\t */\n\tcentered?: boolean;\n\n}\n\nexport interface ICirclePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Circle pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class CirclePattern extends Pattern {\n\n\tdeclare public _settings: ICirclePatternSettings;\n\tdeclare public _privateSettings: ICirclePatternPrivate;\n\n\tpublic static className: string = \"CirclePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([CirclePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst checkered = this.get(\"checkered\", false);\n\t\tconst centered = this.get(\"centered\", true);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\tlet w = this.get(\"width\", 100);\n\t\tlet h = this.get(\"height\", 100);\n\t\tlet radius = this.get(\"radius\", 3);\n\n\t\tlet cellW = radius * 2 + gap;\n\t\tlet cellH = radius * 2 + gap;\n\n\t\tlet cols = Math.round(w / cellW);\n\t\tlet rows = Math.round(h / cellH);\n\n\t\tcellW = w / cols;\n\t\tcellH = h / rows;\n\n\t\tif (rotation != 0) {\n\t\t\t// @todo this is probably not right\n\t\t\tthis._display.x = cellW * $math.cos(rotation);\n\t\t\tthis._display.y = cellH * $math.sin(rotation);\n\t\t}\n\n\t\tconst color = this.get(\"color\");\n\t\tconst colorOpacity = this.get(\"colorOpacity\");\n\t\tif (color || colorOpacity) {\n\t\t\tthis._display.beginFill(color, colorOpacity);\n\t\t}\n\n\t\tfor (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n\t\t\tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n\t\t\t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\n\t\t\t\t\tlet x = c * cellW;\n\t\t\t\t\tlet y = r * cellH;\n\t\t\t\t\tif (centered) {\n\t\t\t\t\t\tx += cellW + gap / 2;\n\t\t\t\t\t\ty += cellH + gap / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis._display.drawCircle(x - radius, y - radius, radius);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (checkered) {\n\t\t\tw = w / 2 - gap * 2;\n\t\t\th = h / 2 - gap * 2;\n\t\t}\n\t\telse {\n\t\t\tw -= gap;\n\t\t\th -= gap;\n\t\t}\n\n\t\tif (color || colorOpacity) {\n\t\t\tthis._display.endFill();\n\t\t}\n\n\t}\n}\n"]}