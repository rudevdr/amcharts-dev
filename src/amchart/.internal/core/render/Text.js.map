{"version":3,"file":"Text.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/render/Text.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { IText } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Sprite, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\nimport { populateString } from \"../util/PopulateString\";\n\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\n\nimport * as $array from \"../util/Array\";\nimport { Disposer } from \"../util/Disposer\";\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport interface ITextSettings extends ISpriteSettings {\n\ttext?: string;\n\tfill?: Color;\n\tfillOpacity?: number;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\"\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: Percent | number;\n\tbaselineRatio?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\topacity?: number;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tminScale?: number;\n\tpopulateText?: boolean;\n\tignoreFormatting?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ITextPrivate extends ISpritePrivate {\n\n\t/**\n\t * @ignore\n\t */\n\ttooltipElement?: HTMLDivElement;\n\n}\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport class Text extends Sprite {\n\n\tdeclare public _settings: ITextSettings;\n\tdeclare public _privateSettings: ITextPrivate;\n\n\tpublic textStyle = this._root._renderer.makeTextStyle();\n\n\tpublic _display: IText = this._root._renderer.makeText(\"\", this.textStyle);\n\n\tprotected _textStyles: Array<keyof ITextSettings> = [\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\"\n\t];\n\n\tprotected _originalScale: number | undefined;\n\n\tpublic static className: string = \"Text\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Text.className]);\n\n\tpublic _updateBounds(): void {\n\t\tif (!this.get(\"text\")) {\n\n\t\t\tlet newBounds: IBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t};\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tsuper._updateBounds();\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tthis._display.clear();\n\n\t\tlet textStyle = <any>this.textStyle;\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tlet opacity = this.get(\"opacity\", 1);\n\t\t\tthis._display.alpha = opacity;\n\t\t}\n\n\t\tif (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\n\t\t\tthis._display.text = this._getText();\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\t\tthis._root.updateTooltip(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"tooltipElement\")) {\n\t\t\tconst tooltipElement = this.getPrivate(\"tooltipElement\");\n\t\t\tif (tooltipElement) {\n\t\t\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t\t\tthis._root._removeTooltipElement(this);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\ttextStyle.wordWrapWidth = this.width();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"oversizedBehavior\")) {\n\t\t\ttextStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"breakWords\")) {\n\t\t\ttextStyle.breakWords = this.get(\"breakWords\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ellipsis\")) {\n\t\t\ttextStyle.ellipsis = this.get(\"ellipsis\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ignoreFormatting\")) {\n\t\t\ttextStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"minScale\")) {\n\t\t\ttextStyle.minScale = this.get(\"minScale\", 0);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tlet fill = this.get(\"fill\");\n\t\t\tif (fill) {\n\t\t\t\ttextStyle.fill = fill;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillOpacity\")) {\n\t\t\tlet fillOpacity = this.get(\"fillOpacity\", 1);\n\t\t\tif (fillOpacity) {\n\t\t\t\ttextStyle.fillOpacity = fillOpacity;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\n\t\t\ttextStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\n\t\t\ttextStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\t$array.each(this._textStyles, (styleName) => {\n\t\t\tif (this._dirty[styleName]) {\n\t\t\t\ttextStyle[styleName] = this.get(styleName);\n\t\t\t\tthis.markDirtyBounds();\n\t\t\t}\n\t\t})\n\n\t\ttextStyle[\"fontSize\"] = this.get(\"fontSize\");\n\t\ttextStyle[\"fontFamily\"] = this.get(\"fontFamily\");\n\t\tthis._display.style = textStyle;\n\n\t\tif (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t}\n\n\tpublic _getText(): string {\n\t\tconst text = this.get(\"text\", \"\");\n\t\treturn this.get(\"populateText\") ? populateString(this, text) : text;\n\t}\n\n\t/**\n\t * Forces the text to be re-evaluated and re-populated.\n\t */\n\tpublic markDirtyText(): void {\n\t\tthis._display.text = this._getText();\n\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t\tthis.markDirtyBounds();\n\t\tthis.markDirty();\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tif (this.get(\"populateText\")) {\n\t\t\tthis.markDirtyText();\n\t\t}\n\t}\n\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getNumberFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getNumberFormatter();\n\t\t}\n\t}\n\n\tpublic getDateFormatter(): DateFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDateFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDateFormatter();\n\t\t}\n\t}\n\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDurationFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDurationFormatter();\n\t\t}\n\t}\n}\n"]}