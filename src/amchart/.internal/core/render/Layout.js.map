{"version":3,"file":"Layout.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/render/Layout.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAmC,MAAM,gBAAgB,CAAC;AAQzE,MAAM,UAAU,YAAY,CAAC,SAAoB,EAAE,CAA2B;IAC1E,IAAI,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAE;QACzC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KACrC;SAAM;QACH,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC9B;AACL,CAAC;AAED;;GAEG;AACH,MAAM,OAAgB,MAAO,SAAQ,MAAM;;AAI1C;;;;WAAkC,QAAQ;GAAC;AAC3C;;;;WAA0C,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import type { Container } from \"./Container\";\nimport type { Sprite } from \"./Sprite\";\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../util/Entity\";\n\nexport interface ILayoutSettings extends IEntitySettings {\n}\n\nexport interface ILayoutPrivate extends IEntityPrivate {\n}\n\nexport function eachChildren(container: Container, f: (sprite: Sprite) => void): void {\n    if (container.get(\"reverseChildren\", false)) {\n        container.children.eachReverse(f);\n    } else {\n        container.children.each(f);\n    }\n}\n\n/**\n * Base class for [[Container]] layouts.\n */\nexport abstract class Layout extends Entity {\n\tdeclare public _settings: ILayoutSettings;\n\tdeclare public _privateSettings: ILayoutPrivate;\n\n\tpublic static className: string = \"Layout\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Layout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateContainer(_container: Container): void;\n}\n"]}